$STOP
/**********************************************************************
 * XG SERVER
 * Пример конфигурационного файла
 * 
 * Правила написания:
 *
 * 0.	Маскимальная длинна имени переменной - 64 символа
 *		Если длинна переменной превышает 64 символа, 
 *		то переменная обрезается до указанной длинны или игнорируется
 *		64 символа - это: ThisIsAMineNewVeryVeryVeryLargeVariableNameWithLengthOf64Symbols
 *
 * 1.	Конфигурационные файлы сервера пишутся в формате JSON.
 * 		Содержимое файлов должно представлять собой структуру JSON объекта
 * 		и обрамляться фигурными скобками { ... }
 *
 * 2.	Поддерживается блочное комментирование вида / * ... * /
 *
 * 3.	Поддерживается комментирование до конца строки # или //
 *
 * 4.	Поддерживаемые типы данных:
 * 			NULL 	-> null
 * 			BOOLEAN	-> true | false
 * 			INTEGER	-> от -9 223 372 036 854 775 808 до 9 223 372 036 854 775 807
 * 			DOUBLE	-> 1.7E+/-308 (15 знаков)
 * 			ARRAY	-> [111, 222, ...]
 * 			OBJECT	-> {"key1":"value1", "key2":"value2", ...}
 *
 * 5.	Поскольку числовой тип данных может быть как INTEGER так и DOUBLE
 * 		(например, число 12345), то для явного указания типа после числа
 * 		следует указать I для типа INTEGER или F для типа DOUBLE, пример
 * 		12345I, 123i, 12345.0i (Будет читаться как 12345) <- INTEGER
 * 		12345F, 123f, 0f <- DOUBLE
 *
 * 6. 	Подключение файлов:
 * 		Имеется возможность задать в качестве значения переменной структуру JSON,
 * 		извлекаемую из подключаемого файла.
 * 		Команда подключения: @include([путь к подключаемому файлу])
 * 		Пример:
 * 			example.conf содержит:
 * 			{
 * 				"language":{
 * 					"en": @include("./conf/languages/en.inc"),
 * 					"ru": @include("./conf/languages/ru.inc"),
 *					"de": @include("./conf/languages/de.inc")
 * 				}
 * 			}
 * 			en.inc содержит:
 * 			{"title":"Hello world!"}
 * 			ru.inc содержит:
 * 			{"title":"Привет мир!"}
 * 			de.inc не существует.
 * 			Результатом обработки example.conf будет:
 * 			{
 * 				"language":{
 * 					"en": {"title":"Hello world!"},
 * 					"ru": {"title":"Привет мир!"},
 *					"de": null
 * 				}
 * 			}
 * 
 * 7.	Специальные команды:
 * 		$STOP - размещенная в начале файла, команда останавливает парсинг и обработку данного файла
 * 
 *  
 **********************************************************************/

{
	/***********************
	 * Строки
	 */
	"string_1": "Test string 1",	//Комментарий
	"string_2": "Test string 2",	//Комментарий


	/***********************
	 * Числа
	 */
	"int_1": 12345,		//Целое число
	"int_2": -123,		//Целое число
	"int_3": -123.0i,	//Целое число
	"dbl_1": 123.45,	//double число
	"dbl_2": 123F,		//double число

	/***********************
	 * Булевы значения
	 */
	"true": true,		#переменная "true" имеет значение ИСТИНА
	"false": false,		#переменная "false" имеет значение ЛОЖЬ

	/***********************
	 * NULL
	 */
	"null": null,		#переменная "null" имеет значение NULL

	/***********************
	 * @include
	 */
	"json": @include(./conf/example.inc),	//Подключает файл ./conf/example.inc и делает его содержимое значением переменной "json"

	/***********************
	 * Массив
	 */
	"arr_1": [111,222,333,444,555],
	"arr_2": ["aaa","bbb","ccc","ddd","eee"],
	"arr_3": ["aaa","bbb","ccc",111,222,333],

	/***********************
	 * Объект
	 */
	"obj_1": {
		"var_str": "string",	//Строка
		"var_int": 12345I,		//Число integer
		"var_dbl": 12345F,		//Число double
		"var_arr": [1,2,3,4],	//Массив
		"var_obj": {
			"v1": 111,			//Число integer
			"v2": 222.0,		//Число double
			"v3": "hello!"		//Строка
		}
	}

}


